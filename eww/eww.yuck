;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                       bar                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(deflisten workspace_listener "scripts/workspaces.sh")

(defpoll wifi_listener :interval "30s" "scripts/wifi.sh")

(defpoll package_listener :interval "1m" "scripts/packages.sh")
(defwidget package [count]
  (box
    (label :text " ")
    (label :text count)
  )
)

(defpoll TIME :interval "1s" `date +\"%H:%M:%S\"`)
(defwidget clock []
  (box
    (label :text TIME)
  )
)

(deflisten battery_listener "scripts/battery.sh")
(defwidget battery [level icon]
  (box
    (label :text icon)
    (label :text level)
  )
)

(defvar keyboard_listener "(keyboard :language 'english')")
(defwidget keyboard [language]
  (box :class "keyboard-container" :width 130 
    (label :class "keyboard-icon" 
           :text "󰥻 " 
           :height 30 
           :width 30
            :halign "start"
    )

    (label :class "keyboard-language" 
           :text language)
  )
)

(defvar bluetooth_listener "")
(defwidget bluetooth [level]
  (box 
    (label :text level)
  )
)

(defvar brightness_listener "")
(defwidget brightness [level]
  (box 
    (circular-progress :value level)
    (label :text level)
  )
)

(defvar sound_listener "")
(defwidget sound [volume icon]
  (box 
    (label :text icon)
    (label :text volume)
  )
)

(defwindow bar
	:monitor 0
	:windowtype "dock"
	:exclusive true	
  :namespace "bar"
  :geometry (geometry 
              :y "10px"
			        :width 2860
		        	:anchor "top center"
			      )

	(box :class "main-container"
	  (box :class "container" :halign "start"
      (literal :content keyboard_listener)
      (clock) 
    )
	  (box :class "container" :halign "center"
      (literal :content workspace_listener)
    )
	  (box :class "container" :halign "end"
      (literal :content brightness_listener)
      (literal :content bluetooth_listener)
      (literal :content sound_listener)
      (literal :content battery_listener)
      (literal :content package_listener)
      (literal :content wifi_listener)
    )
	)
)




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                notification deamon                                   ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(deflisten notifications_listener :initial "" "python ~/.config/eww/scripts/notification.py")
(defwidget notification [icon summary body]
  (box :class "notif"
    (box :orientation 'horizontal' :space-evenly false
      (image :image-width 80 :image-height 80 :path icon)
      (box :orientation 'vertical'
        (label :width 100 :wrap true :text summary)
        (label :width 100 :wrap true :text body)
      )
    )
  )
)

(defwindow notifications 
  :monitor 0
  :stacking "overlay"
  :geometry (geometry 
              :x "20px"
              :y "20px"
              :width "2px"
              :height "2px"
              :anchor "top right"
  )

  (literal :content notifications_listener)
)
