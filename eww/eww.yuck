;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                       bar                                            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwidget icon [?class_name icon] (box :class class_name (label :text icon)))
(defwidget icon_text [?class_name icon text] (box :class class_name :space-evenly false :orientation "v"
    (label :class "icon" :text icon)
    (label :class "text" :text text)
))

(defpoll battery_listener :interval "10s" "~/.config/scripts/battery.sh")
(defpoll package_listener :interval "1m" "~/.config/scripts/package.sh")
(defpoll wifi_listener :interval "10s" "~/.config/scripts/wifi.sh")

(deflisten workspace_listener "~/.config/scripts/workspaces.sh")

(defvar brightness_listener "(icon_text :icon '' :text '000')")
(defvar keyboard_listener '(box :class "fcitx" :space-evenly false :orientation "v" (label :class "icon" :text "󰥻") (label :text "en"))')
(defvar sound_listener "(icon_text :icon '' :text '000')")
(defvar bluetooth_listener "(icon :icon '󰂲')")
(defvar bell_listener "(icon :icon '')")
(defvar mic_listener "(icon :icon '')")
(defvar music_bool true)

(defwindow bar [screen id]
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :namespace {id == 0 ? "eww-bar" : "eww-bar-1"}
  :geometry (geometry
              :anchor "left center" 
              :width "60px"
              :height {id == 0 ? "1800px" : "1080px"}
            )

  (box :orientation "v" :class "background" 
    (box :orientation "v" :valign "start" :space-evenly false :class "left"
      (label :text "\\n${formattime(EWW_TIME, '%H\\n%M\\n%S')}")
      (literal :content keyboard_listener)
      (eventbox :onclick 'notify-send -a "toggle-mute" void' 
        (literal :content bell_listener)
      )
    )

    (box :orientation "v" :valign "center" :space-evenly false
      (literal :content workspace_listener :screen screen)
    )

    (box :orientation "v" :valign "end" :space-evenly false :class "right"
      (literal :content wifi_listener)
      (literal :content bluetooth_listener)
      (literal :content mic_listener)
      (literal :content sound_listener)
      (literal :content package_listener)
      (literal :content brightness_listener)
      (literal :content battery_listener)
)))


(defwindow test []
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :namespace {0 == 0 ? "eww-bar" : "eww-bar-1"}
  :geometry (geometry
              :anchor "right center" 
              :width "60px"
              :height {0 == 0 ? "1800px" : "1080px"}
            )

  (box :orientation "v" :class "background" 
    (box :orientation "v" :valign "start" :space-evenly false :class "left"
      (label :text "\\n${formattime(EWW_TIME, '%H\\n%M\\n%S')}")
      (literal :content keyboard_listener)
      (eventbox :onclick 'notify-send -a "toggle-mute" void' 
        (literal :content bell_listener)
      )
    )

    (box :orientation "v" :valign "center" :space-evenly false
    )

    (box :orientation "v" :valign "end" :space-evenly false :class "right"
      (literal :content wifi_listener)
      (literal :content bluetooth_listener)
      (literal :content mic_listener)
      (literal :content sound_listener)
      (literal :content package_listener)
      (literal :content brightness_listener)
      (literal :content battery_listener)
)))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                notification deamon                                   ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(deflisten notifications_listener :initial "" "python ~/.config/eww/notification.py")
(defwidget notification [id app_name summary body icon]
  (button :class 'notif' :onclick "notify-send ' ' -a 'rm-msg' -r ${id}"
    (box :orientation 'h' :space-evenly false
      (image :path icon :image-height 200 :image-width 200 :visible {icon != ''} :hexpand false :vexpand false)
      (box :orientation 'vertical' :space-evenly false
        (label :wrap true :class 'notif-app' :text app_name)
        (label :wrap true :class 'notif-summary' :text summary)
        (label :wrap true :class 'notif-body' :text body)
      )
    )
  )
)

(defwindow notifications 
  :monitor 0
  :namespace "eww-notification-daemon"
  :stacking "overlay"
  :geometry (geometry :anchor "top right" :x 20 :y 18)

  (box :class "notification_box" (literal :content notifications_listener))
)
